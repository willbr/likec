def car-void (l (* List)) (* void)
    return (-> l next data)


def cdr (l (* List)) (* List)
    return (? (== (-> l next) NULL)
              NULL
              (-> l next))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;              Objects
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


typedef Int_t int
obj Int
    def new (n int)
        = [@] n


typedef String_t (* char)
obj String
    def new (s (* char))
        = @ (malloc (+ (strlen s) 1))
        strcpy [@] s

    def die
        free @


obj List
    next (* List)
    data (* void)

    def append (new_data (* void))
        = new_element (List)
        = new_element->data new_data
        while (isnt @next NULL)
            = @ @next
        = @next new_element


